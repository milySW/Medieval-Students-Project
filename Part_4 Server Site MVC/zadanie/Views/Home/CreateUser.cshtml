@model zadanie.Models.UserFormViewModel
@{
    ViewData["Title"] = "CreateUser";
}

<!--Strona do rejstracji użytkownika.-->

<body class="register-table">
    <!-- Formularz kontaktowy-->
    @using (Html.BeginForm("CreateUser", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <!--Imię-->
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    <table class="long-table">
                        <tr>
                            <!--Okno na imię użytkownika-->
                            <td>@Html.TextBoxFor(model => model.FirstName, new { @class = "form-control user-info" })</td>
                            <!--Okno na informację o błędzie-->
                            <td class="td-with-small-margin">@Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "error info" })</td>
                        </tr>
                    </table>
                </div>
            </div>

            <!--Nazwisko-->
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    <table class="long-table">
                        <tr>
                            <!--Okno na nazwisko użytkownika-->
                            <td>@Html.TextBoxFor(model => model.LastName, new { @class = "form-control user-info" })</td>
                            <!--Okno na informację o błędzie-->
                            <td class="td-with-small-margin">@Html.ValidationMessageFor(m => m.LastName, "", new { @class = "error info" })</td>
                        </tr>
                    </table>
                </div>
            </div>

            <!--Nick-->
            <div class="form-group">
                @Html.LabelFor(model => model.Nick, "Nick", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    <table class="long-table">
                        <tr>
                            <!--Okno na nick użytkownika-->
                            <td> @Html.TextBoxFor(model => model.Nick, new { @class = "form-control user-info" })</td>
                            <!--Okno na informację o błędzie-->
                            <td class="td-with-small-margin">@Html.ValidationMessageFor(m => m.Nick, "", new { @class = "error info" })</td>
                            @if (ViewBag.Check == true)
                            {
                                <td class="td-with-small-margin">
                                    <p class="info">User nick taken.</p>
                                </td>
                            }

                        </tr>
                    </table>
                </div>
            </div>

            <!--Hasło-->
            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    <table>
                        <tr>
                            <!--Okno na hasło użytkownika-->
                            <td>@Html.PasswordFor(model => model.Password, new { @class = "form-control user-info" })</td>
                            <!--Okno na informację o błędzie-->
                            <td class="td-with-small-margin">@Html.ValidationMessageFor(m => m.Password, "", new { @class = "error info" })</td>
                        </tr>
                    </table>
                </div>
            </div>

            <!--Potwierdzenie hasła-->
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, "Confirm Passowrd", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    <table class="long-table">
                        <tr>
                            <!--Okno na potwierdzenie hasła użytkownika-->
                            <td> @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control user-info" })</td>
                            <!--Okno na informację o błędzie-->
                            <td class="td-with-small-margin">@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "error info" })</td>
                        </tr>
                    </table>
                </div>
            </div>

            <!--Zdjęcie-->
            <div class="form-group">
                @Html.LabelFor(model => model.Photo, "Avatar", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    <table class="long-table">
                        <tr>
                            <!--Okno na upload zdjęcia-->
                            <td><input type="file" name="file" value="Browse" /></td>
                        </tr>
                    </table>
                    @if (ViewBag.UploadSuccess == true)
                    {
                        <span>Upload completed successfull</span>
                    }
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
        <script src="~/lib/jquery/dist/jquery.js"></script>
        <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    }
</body>